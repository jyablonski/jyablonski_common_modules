name: Common Modules Pipeline

on:
  pull_request:
    branches:
      - master
  push:
    branches:
      - master

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  ci_pipeline:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Run tests
        run: |
          make test

  cd_pipeline:
    runs-on: ubuntu-latest
    needs: ci_pipeline
    if: github.event_name == 'push' && github.ref == 'refs/heads/master' && success()
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Build and publish to PyPI
        uses: JRubics/poetry-publish@v2.0
        with:
          pypi_token: ${{ secrets.PYPI_TOKEN }}

  deploy-alert-success:
    needs: cd_pipeline
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Slack Notification
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_COLOR: ${{ job.status }}
          SLACK_MESSAGE: '${{ github.event.pull_request.title }} Deployed to Production'
          SLACK_TITLE: Common Modules Deploy Pipeline Success
          SLACK_USERNAME: GitHub Actions
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}

  deploy-alert-failure:
    needs: cd_pipeline
    runs-on: ubuntu-latest
    if: failure() && github.event_name == 'push' && github.ref == 'refs/heads/master'
    steps:
      - uses: actions/checkout@v4
      - name: Slack Notification
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_COLOR: ${{ job.status }}
          SLACK_MESSAGE: '${{ github.event.pull_request.title }} Failed to deploy properly'
          SLACK_TITLE: Common Modules Deploy Pipeline Failure
          SLACK_USERNAME: GitHub Actions
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
